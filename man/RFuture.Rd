% Generated by r6-generator-maven-plugin: do not edit by hand
% Generated by roxygen2: do not edit by hand
\name{RFuture}
\alias{RFuture}
\title{R6 RFuture class}
\description{
This implements functions to check on the status of a Java process running
in a thread and determine if it has finished, or cancel it if needs be.
This is low level as async classes go as the main goal is to put the java
process into a state in which interruptions in the R process can cancel
the Java thread.
}
\details{
no details
}
\keyword{internal}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{.r6obj}}{the r6obj creating this future.}

\item{\code{.api}}{the java api.}

\item{\code{.method}}{the method name that is being called asynchronously}

\item{\code{.jthread}}{internal pointer to the rJava reference to the java threadrunner.}

\item{\code{.converter}}{converts the Java return value to an R object}

\item{\code{.returnSig}}{the return signature of the expected object.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-RFuture-new}{\code{RFuture$new()}}
\item \href{#method-RFuture-cancel}{\code{RFuture$cancel()}}
\item \href{#method-RFuture-isCancelled}{\code{RFuture$isCancelled()}}
\item \href{#method-RFuture-isDone}{\code{RFuture$isDone()}}
\item \href{#method-RFuture-get}{\code{RFuture$get()}}
\item \href{#method-RFuture-clone}{\code{RFuture$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RFuture-new"></a>}}
\if{latex}{\out{\hypertarget{method-RFuture-new}{}}}
\subsection{Method \code{new()}}{
Create a new JFuture. This is done automatically by the API.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RFuture$new(
  r6obj,
  method,
  returnSig,
  converter,
  wrapper = NULL,
  api = r6obj$.api,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{r6obj}}{The r6obj creating this future, or the class name of a static java class}

\item{\code{method}}{The java method name to be called async}

\item{\code{returnSig}}{The JNI return signature}

\item{\code{converter}}{The R6 api function that the return value should use}

\item{\code{wrapper}}{The R6 api class that the return value should be wrapped in}

\item{\code{api}}{The java api}

\item{\code{...}}{parameters to pass to the java method}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new JFuture holding the java thread executing the method.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RFuture-cancel"></a>}}
\if{latex}{\out{\hypertarget{method-RFuture-cancel}{}}}
\subsection{Method \code{cancel()}}{
cancel execution of the async function
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RFuture$cancel()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RFuture-isCancelled"></a>}}
\if{latex}{\out{\hypertarget{method-RFuture-isCancelled}{}}}
\subsection{Method \code{isCancelled()}}{
has the function been cancelled
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RFuture$isCancelled()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RFuture-isDone"></a>}}
\if{latex}{\out{\hypertarget{method-RFuture-isDone}{}}}
\subsection{Method \code{isDone()}}{
did execution of the function complete yet (or get cancelled). This can be used in a while loop.
with an appropriate delay.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RFuture$isDone()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RFuture-get"></a>}}
\if{latex}{\out{\hypertarget{method-RFuture-get}{}}}
\subsection{Method \code{get()}}{
block execution until the function returns a value or throws an error.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RFuture$get()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
the result of the function or an error.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RFuture-clone"></a>}}
\if{latex}{\out{\hypertarget{method-RFuture-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RFuture$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
