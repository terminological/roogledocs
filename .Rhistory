knitr::opts_chunk$set(
echo = TRUE,
collapse = TRUE
)
library(tidyverse)
library(huxtable)
devtools::load_all("~/Git/roogledocs/")
here::i_am("vignettes/using-roogledocs.Rmd")
J = roogledocs::JavaApi$get()
options('roogledocs.disabled'=FALSE)
doc = J$RoogleDocs$new()
doc$deleteDocument("roogledocs-demo",TRUE)
doc$findOrCloneTemplate("roogledocs-demo","https://docs.google.com/document/d/1R8SuJI5uJwoMGBHGMaCdRH6i9R39DPQdcAdAF4BWZ20/edit?usp=sharing")
doc$saveAsPdf(here::here("docs/articles/example-template-doc.pdf"))
hux = diamonds %>% mutate(colorCat = ifelse(color <= "G", "D-G","G-J")) %>% group_by(cut,colorCat) %>% summarise(
`Size (mean + sd)` = sprintf("%1.2f \u00B1 %1.2f",mean(carat),sd(carat)),
`Cost (mean + sd)` = sprintf("%1.0f \u00B1 %1.0f",mean(price),sd(price))
) %>% huxtable::as_hux() %>% huxtable::theme_article() %>% huxtable::merge_repeated_rows()
hux %>% roogledocs::as.long_format_table() %>% doc$updateTable(tableIndex = 1,tableWidthInches = 4)
devtools::load_all()
doc$deleteDocument("roogledocs-demo",TRUE)
doc$findOrCloneTemplate("roogledocs-demo","https://docs.google.com/document/d/1R8SuJI5uJwoMGBHGMaCdRH6i9R39DPQdcAdAF4BWZ20/edit?usp=sharing")
doc$saveAsPdf(here::here("docs/articles/example-template-doc.pdf"))
hux = diamonds %>% mutate(colorCat = ifelse(color <= "G", "D-G","G-J")) %>% group_by(cut,colorCat) %>% summarise(
`Size (mean + sd)` = sprintf("%1.2f \u00B1 %1.2f",mean(carat),sd(carat)),
`Cost (mean + sd)` = sprintf("%1.0f \u00B1 %1.0f",mean(price),sd(price))
) %>% huxtable::as_hux() %>% huxtable::theme_article() %>% huxtable::merge_repeated_rows()
hux %>% roogledocs::as.long_format_table() %>% doc$updateTable(tableIndex = 1,tableWidthInches = 4)
hux
g = ggplot(diamonds, aes(x=carat,y=price, colour=color))+geom_point()
filename = tempfile(fileext = ".png")
ggsave(filename, g, width=6, height=3)
filename %>% doc$updateFigure(figureIndex = 1)
g
g2 = ggplot(diamonds, aes(x=cut,y=price, fill=cut))+geom_violin(draw_quantiles = c(0.95,0.5,0.05))+scale_fill_brewer()
filename = tempfile(fileext = ".png")
ggsave(filename, g2, width=4, height=3)
filename %>% doc$updateFigure(figureIndex = 2)
g2
doc$tagsDefined()
format(Sys.Date(),"%d/%m/%Y") %>% doc$updateTaggedText(tagName = "table-1-update-date")
sprintf("%1.1f \u00B1 %1.1f",mean(diamonds$price),sd(diamonds$price)) %>% doc$updateTaggedText(tagName = "diamonds-mean-sd")
doc$appendText("\nAdding new content\n","HEADING_3")
content = tibble::tribble(
~label, ~link, ~fontName, ~fontFace,
"Roogledocs", "https://terminological.github.io/roogledocs/r-library/docs/", "Courier New", "plain",
" is also able to add text at the end of the document with complex formatting. ", NA, NA, "plain",
"Supporting fonts and font face formatting such as ",  NA, NA, "plain",
"bold, ", NA, NA, "bold",
"italic ", NA, NA, "italic",
"and underlined", NA, NA, "underlined",
" amongst other things.", NA, NA, "plain"
)
content
doc$appendFormattedParagraph(content)
doc$saveAsPdf(here::here("docs/articles/example-after-update.pdf"))
?.jpackage
packageVersion("rJava")
packageVersion("rJava")[2,2]
packageVersion("rJava")[2:3]
packageVersion("rJava")[[2:3]]
str_sub
stri_sub
?str_sub
?stri_sub
substr(packageVersion("rJava"),2,1)
substr(packageVersion("rJava"),2,3)
substr(packageVersion("rJava"),1,1)
pkgdown::build_site()
